{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krishna chand Patida\\\\OneDrive\\\\Desktop\\\\negii\\\\src\\\\components\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Container, Typography, Grid } from \"@mui/material\";\nimport OverviewPanel from \"./OverviewPanel\";\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = ({\n  questions,\n  onSubmit\n}) => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState(Array(questions.length).fill(null));\n  const [timeLeft, setTimeLeft] = useState(1800);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(timer);\n          handleSubmit();\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  const handleAnswer = (index, answer) => {\n    const newAnswers = [...answers];\n    newAnswers[index] = answer;\n    setAnswers(newAnswers);\n  };\n  const handleSubmit = () => {\n    onSubmit(answers);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      style: {\n        textAlign: \"center\",\n        marginBottom: \"20px\"\n      },\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: [\"Time Remaining: \", Math.floor(timeLeft / 60), \":\", timeLeft % 60]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(OverviewPanel, {\n          questions: questions,\n          currentQuestion: currentQuestion,\n          answers: answers,\n          onSelect: index => setCurrentQuestion(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        children: [/*#__PURE__*/_jsxDEV(Question, {\n          question: questions[currentQuestion],\n          questionIndex: currentQuestion,\n          answer: answers[currentQuestion],\n          onAnswer: answer => handleAnswer(currentQuestion, answer)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => setCurrentQuestion(prev => Math.max(prev - 1, 0)),\n            disabled: currentQuestion === 0,\n            style: {\n              marginRight: \"10px\"\n            },\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => setCurrentQuestion(prev => Math.min(prev + 1, questions.length - 1)),\n            disabled: currentQuestion === questions.length - 1,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleSubmit,\n            style: {\n              float: \"right\"\n            },\n            children: \"Submit Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"mSxeqKRGvQF1aJ0LyzrDvHxajn8=\");\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","Button","Container","Typography","Grid","OverviewPanel","Question","jsxDEV","_jsxDEV","QuizPage","questions","onSubmit","_s","currentQuestion","setCurrentQuestion","answers","setAnswers","Array","length","fill","timeLeft","setTimeLeft","timer","setInterval","prev","clearInterval","handleSubmit","handleAnswer","index","answer","newAnswers","children","variant","style","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","container","spacing","item","xs","onSelect","question","questionIndex","onAnswer","marginTop","onClick","max","disabled","marginRight","min","color","float","_c","$RefreshReg$"],"sources":["C:/Users/Krishna chand Patida/OneDrive/Desktop/negii/src/components/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Container, Typography, Grid } from \"@mui/material\";\r\nimport OverviewPanel from \"./OverviewPanel\";\r\nimport Question from \"./Question\";\r\n\r\nconst QuizPage = ({ questions, onSubmit }) => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [answers, setAnswers] = useState(Array(questions.length).fill(null));\r\n  const [timeLeft, setTimeLeft] = useState(1800);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTimeLeft((prev) => {\r\n        if (prev <= 1) {\r\n          clearInterval(timer);\r\n          handleSubmit();\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  const handleAnswer = (index, answer) => {\r\n    const newAnswers = [...answers];\r\n    newAnswers[index] = answer;\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    onSubmit(answers);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" style={{ textAlign: \"center\", marginBottom: \"20px\" }}>\r\n        Quiz\r\n      </Typography>\r\n      <Typography variant=\"h6\" style={{ textAlign: \"center\" }}>\r\n        Time Remaining: {Math.floor(timeLeft / 60)}:{timeLeft % 60}\r\n      </Typography>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={3}>\r\n          <OverviewPanel\r\n            questions={questions}\r\n            currentQuestion={currentQuestion}\r\n            answers={answers}\r\n            onSelect={(index) => setCurrentQuestion(index)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <Question\r\n            question={questions[currentQuestion]}\r\n            questionIndex={currentQuestion}\r\n            answer={answers[currentQuestion]}\r\n            onAnswer={(answer) => handleAnswer(currentQuestion, answer)}\r\n          />\r\n          <div style={{ marginTop: \"20px\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => setCurrentQuestion((prev) => Math.max(prev - 1, 0))}\r\n              disabled={currentQuestion === 0}\r\n              style={{ marginRight: \"10px\" }}\r\n            >\r\n              Previous\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => setCurrentQuestion((prev) => Math.min(prev + 1, questions.length - 1))}\r\n              disabled={currentQuestion === questions.length - 1}\r\n            >\r\n              Next\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleSubmit}\r\n              style={{ float: \"right\" }}\r\n            >\r\n              Submit Quiz\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}