{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krishna chand Patida\\\\OneDrive\\\\Desktop\\\\negii\\\\src\\\\components\\\\Question.js\";\n// import React from \"react\";\n// import {\n//   Card,\n//   CardContent,\n//   RadioGroup,\n//   Radio,\n//   FormControlLabel,\n//   Typography,\n// } from \"@mui/material\";\n\n// const Question = ({ question, questionIndex, answer, onAnswer }) => {\n//   if (!question || !question.question || !question.options) {\n//     return (\n//       <Card>\n//         <CardContent>\n//           <Typography variant=\"h6\" color=\"error\">\n//             Question data is not available or invalid.\n//           </Typography>\n//         </CardContent>\n//       </Card>\n//     );\n//   }\n\n//   return (\n//     <Card>\n//       <CardContent>\n\n//         <Typography variant=\"h6\">{`Q${questionIndex + 1}. ${\n//           question.question\n//         }`}</Typography>\n\n//         <RadioGroup\n//           value={answer || \"\"} \n//           onChange={(e) => onAnswer(e.target.value)}\n//         >\n//           {question.options.map((option, index) => (\n//             <FormControlLabel\n//               key={index}\n//               value={option}\n//               control={<Radio />}\n//               label={option}\n//             />\n//           ))}\n//         </RadioGroup>\n//       </CardContent>\n//     </Card>\n//   );\n// };\n\n// export default Question;\n\nimport React from \"react\";\nimport { Card, CardContent, RadioGroup, Radio, FormControlLabel, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = ({\n  question,\n  questionIndex,\n  answer,\n  onAnswer\n}) => {\n  if (!question || !question.question || !question.options) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"error\",\n          children: \"Question data is not available or invalid.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"primary\",\n        children: `Q${questionIndex + 1}. ${question.question}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        value: answer || \"\",\n        onChange: e => onAnswer(e.target.value),\n        children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: option,\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 24\n          }, this),\n          label: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 22\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","Card","CardContent","RadioGroup","Radio","FormControlLabel","Typography","jsxDEV","_jsxDEV","Question","question","questionIndex","answer","onAnswer","options","children","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","option","index","control","label","_c","$RefreshReg$"],"sources":["C:/Users/Krishna chand Patida/OneDrive/Desktop/negii/src/components/Question.js"],"sourcesContent":["// import React from \"react\";\r\n// import {\r\n//   Card,\r\n//   CardContent,\r\n//   RadioGroup,\r\n//   Radio,\r\n//   FormControlLabel,\r\n//   Typography,\r\n// } from \"@mui/material\";\r\n\r\n// const Question = ({ question, questionIndex, answer, onAnswer }) => {\r\n//   if (!question || !question.question || !question.options) {\r\n//     return (\r\n//       <Card>\r\n//         <CardContent>\r\n//           <Typography variant=\"h6\" color=\"error\">\r\n//             Question data is not available or invalid.\r\n//           </Typography>\r\n//         </CardContent>\r\n//       </Card>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <Card>\r\n//       <CardContent>\r\n       \r\n//         <Typography variant=\"h6\">{`Q${questionIndex + 1}. ${\r\n//           question.question\r\n//         }`}</Typography>\r\n\r\n       \r\n//         <RadioGroup\r\n//           value={answer || \"\"} \r\n//           onChange={(e) => onAnswer(e.target.value)}\r\n//         >\r\n//           {question.options.map((option, index) => (\r\n//             <FormControlLabel\r\n//               key={index}\r\n//               value={option}\r\n//               control={<Radio />}\r\n//               label={option}\r\n//             />\r\n//           ))}\r\n//         </RadioGroup>\r\n//       </CardContent>\r\n//     </Card>\r\n//   );\r\n// };\r\n\r\n// export default Question;\r\n\r\n\r\nimport React from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nconst Question = ({ question, questionIndex, answer, onAnswer }) => {\r\n      if (!question || !question.question || !question.options) {\r\n    return (\r\n      <Card>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" color=\"error\">\r\n            Question data is not available or invalid.\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        {/* Display the question */}\r\n        <Typography variant=\"h6\" color=\"primary\">{`Q${questionIndex + 1}. ${\r\n          question.question\r\n        }`}</Typography>\r\n\r\n        {/* Display the options as a radio group */}\r\n        <RadioGroup\r\n          value={answer || \"\"}\r\n          onChange={(e) => onAnswer(e.target.value)}\r\n        >\r\n          {question.options.map((option, index) => (\r\n            <FormControlLabel\r\n              key={index}\r\n              value={option}\r\n              control={<Radio color=\"secondary\" />}\r\n              label={<Typography variant=\"body1\">{option}</Typography>}\r\n            />\r\n          ))}\r\n        </RadioGroup>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,IAAI,EACJC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,gBAAgB,EAChBC,UAAU,QACL,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,aAAa;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAK;EAC9D,IAAI,CAACH,QAAQ,IAAI,CAACA,QAAQ,CAACA,QAAQ,IAAI,CAACA,QAAQ,CAACI,OAAO,EAAE;IAC5D,oBACEN,OAAA,CAACP,IAAI;MAAAc,QAAA,eACHP,OAAA,CAACN,WAAW;QAAAa,QAAA,eACVP,OAAA,CAACF,UAAU;UAACU,OAAO,EAAC,IAAI;UAACC,KAAK,EAAC,OAAO;UAAAF,QAAA,EAAC;QAEvC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAEX;EACA,oBACEb,OAAA,CAACP,IAAI;IAAAc,QAAA,eACHP,OAAA,CAACN,WAAW;MAAAa,QAAA,gBAEVP,OAAA,CAACF,UAAU;QAACU,OAAO,EAAC,IAAI;QAACC,KAAK,EAAC,SAAS;QAAAF,QAAA,EAAE,IAAIJ,aAAa,GAAG,CAAC,KAC7DD,QAAQ,CAACA,QAAQ;MACjB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAGhBb,OAAA,CAACL,UAAU;QACTmB,KAAK,EAAEV,MAAM,IAAI,EAAG;QACpBW,QAAQ,EAAGC,CAAC,IAAKX,QAAQ,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAP,QAAA,EAEzCL,QAAQ,CAACI,OAAO,CAACY,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAClCpB,OAAA,CAACH,gBAAgB;UAEfiB,KAAK,EAAEK,MAAO;UACdE,OAAO,eAAErB,OAAA,CAACJ,KAAK;YAACa,KAAK,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACrCS,KAAK,eAAEtB,OAAA,CAACF,UAAU;YAACU,OAAO,EAAC,OAAO;YAAAD,QAAA,EAAEY;UAAM;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa;QAAE,GAHpDO,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIX,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEX,CAAC;AAACU,EAAA,GArCItB,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}